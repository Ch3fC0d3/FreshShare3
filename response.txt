<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>USDA API Test</title>
    <style>
        body {
            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
            max-width: 1000px;
            margin: 0 auto;
            padding: 20px;
            line-height: 1.6;
        }
        h1 {
            color: #2c3e50;
            border-bottom: 2px solid #eee;
            padding-bottom: 10px;
        }
        .form-group {
            margin-bottom: 15px;
        }
        label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
        }
        input[type="text"] {
            width: 100%;
            padding: 10px;
            font-size: 16px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
        button {
            background-color: #4CAF50;
            color: white;
            border: none;
            padding: 10px 15px;
            font-size: 16px;
            cursor: pointer;
            border-radius: 4px;
            margin-right: 10px;
        }
        button:hover {
            background-color: #45a049;
        }
        button.secondary {
            background-color: #2196F3;
        }
        button.secondary:hover {
            background-color: #0b7dda;
        }
        .results {
            margin-top: 20px;
            padding: 15px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
        .debug {
            margin-top: 10px;
            padding: 15px;
            background-color: #f8f9fa;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-family: monospace;
            white-space: pre-wrap;
            max-height: 400px;
            overflow-y: auto;
        }
        .status {
            margin-top: 10px;
            padding: 10px;
            border-radius: 4px;
        }
        .success {
            background-color: #dff0d8;
            color: #3c763d;
        }
        .error {
            background-color: #f2dede;
            color: #a94442;
        }
        .tabs {
            margin-top: 20px;
            border-bottom: 1px solid #ddd;
        }
        .tab {
            display: inline-block;
            padding: 10px 15px;
            cursor: pointer;
            border: 1px solid transparent;
            border-bottom: none;
            margin-bottom: -1px;
        }
        .tab.active {
            border-color: #ddd;
            border-bottom-color: white;
            background-color: white;
        }
        .tab-content {
            display: none;
            padding: 20px;
            border: 1px solid #ddd;
            border-top: none;
        }
        .tab-content.active {
            display: block;
        }
        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 10px;
        }
        th, td {
            padding: 8px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }
        th {
            background-color: #f2f2f2;
        }
        pre {
            background-color: #f5f5f5;
            padding: 10px;
            border-radius: 4px;
            overflow-x: auto;
        }
        .loading {
            display: inline-block;
            width: 20px;
            height: 20px;
            border: 3px solid rgba(0, 0, 0, 0.1);
            border-radius: 50%;
            border-top-color: #3498db;
            animation: spin 1s ease-in-out infinite;
            margin-left: 10px;
            vertical-align: middle;
        }
        @keyframes spin {
            to { transform: rotate(360deg); }
        }
    </style>
</head>
<body>
    <h1>USDA Food Data Central API Test</h1>
    <p>This tool tests both direct USDA API access and the FreshShare API integration</p>
    
    <div class="tabs">
        <div class="tab active" data-tab="direct-test">Direct USDA API Test</div>
        <div class="tab" data-tab="local-test">FreshShare API Test</div>
    </div>
    
    <div id="direct-test" class="tab-content active">
        <h2>Direct USDA API Test</h2>
        <p>Test direct connection to the USDA Food Data Central API</p>
        
        <div class="form-group">
            <label for="direct-query">Search Query:</label>
            <input type="text" id="direct-query" placeholder="Enter food item (e.g. apple)" value="apple">
        </div>
        
        <div class="form-group">
            <label for="direct-api-key">API Key (leave blank to use DEMO_KEY):</label>
            <input type="text" id="direct-api-key" placeholder="Enter your USDA API key or leave empty">
        </div>
        
        <div class="form-group">
            <button onclick="testDirectApi()">Test Direct API</button>
            <span id="direct-loading" class="loading" style="display: none;"></span>
        </div>
        
        <div id="direct-status" class="status" style="display: none;"></div>
        <div id="direct-results" class="results" style="display: none;"></div>
        <div id="direct-debug" class="debug" style="display: none;"></div>
    </div>
    
    <div id="local-test" class="tab-content">
        <h2>FreshShare API Test</h2>
        <p>Test the FreshShare API integration with USDA Food Data Central</p>
        
        <div class="form-group">
            <label for="local-query">Search Query:</label>
            <input type="text" id="local-query" placeholder="Enter food item (e.g. apple)" value="apple">
        </div>
        
        <div class="form-group">
            <button onclick="testLocalApi()">Test Local API</button>
            <span id="local-loading" class="loading" style="display: none;"></span>
        </div>
        
        <div id="local-status" class="status" style="display: none;"></div>
        <div id="local-results" class="results" style="display: none;"></div>
        <div id="local-debug" class="debug" style="display: none;"></div>
    </div>

    <script>
        // Tab functionality
        document.querySelectorAll('.tab').forEach(tab => {
            tab.addEventListener('click', function() {
                // Remove active class from all tabs and content
                document.querySelectorAll('.tab').forEach(t => t.classList.remove('active'));
                document.querySelectorAll('.tab-content').forEach(c => c.classList.remove('active'));
                
                // Add active class to clicked tab and corresponding content
                this.classList.add('active');
                document.getElementById(this.dataset.tab).classList.add('active');
            });
        });
        
        // Test direct USDA API
        async function testDirectApi() {
            const query = document.getElementById('direct-query').value.trim();
            const apiKey = document.getElementById('direct-api-key').value.trim() || 'DEMO_KEY';
            
            if (!query) {
                showDirectStatus('Please enter a search query', 'error');
                return;
            }
            
            // Show loading indicator
            document.getElementById('direct-loading').style.display = 'inline-block';
            document.getElementById('direct-status').style.display = 'none';
            document.getElementById('direct-results').style.display = 'none';
            document.getElementById('direct-debug').style.display = 'none';
            
            try {
                const startTime = performance.now();
                const url = `https://api.nal.usda.gov/fdc/v1/foods/search`;
                
                const params = new URLSearchParams({
                    api_key: apiKey,
                    query: query,
                    dataType: 'Branded',
                    pageSize: 10
                });
                
                const debugInfo = `Request URL: ${url}\nParameters: ${params.toString().replace(apiKey, '[HIDDEN]')}\n`;
                
                const response = await fetch(`${url}?${params.toString()}`);
                const data = await response.json();
                const endTime = performance.now();
                
                // Show results
                document.getElementById('direct-results').style.display = 'block';
                document.getElementById('direct-debug').style.display = 'block';
                
                if (response.ok) {
                    // Success
                    showDirectStatus(`API request successful (${Math.round(endTime - startTime)}ms)`, 'success');
                    
                    let resultsHtml = `
                        <h3>Results</h3>
                        <p>Total hits: ${data.totalHits}</p>
                    `;
                    
                    if (data.foods && data.foods.length > 0) {
                        resultsHtml += `
                            <table>
                                <tr>
                                    <th>#</th>
                                    <th>Description</th>
                                    <th>Brand</th>
                                    <th>ID</th>
                                </tr>
                        `;
                        
                        data.foods.forEach((food, index) => {
                            resultsHtml += `
                                <tr>
                                    <td>${index + 1}</td>
                                    <td>${food.description || 'N/A'}</td>
                                    <td>${food.brandName || 'N/A'}</td>
                                    <td>${food.fdcId || 'N/A'}</td>
                                </tr>
                            `;
                        });
                        
                        resultsHtml += '</table>';
                    } else {
                        resultsHtml += '<p>No results found</p>';
                    }
                    
                    document.getElementById('direct-results').innerHTML = resultsHtml;
                    document.getElementById('direct-debug').innerHTML = debugInfo + '\nResponse:\n' + JSON.stringify(data, null, 2);
                } else {
                    // Error
                    showDirectStatus(`API request failed: ${response.status} ${response.statusText}`, 'error');
                    document.getElementById('direct-results').innerHTML = '<p>Request failed</p>';
                    document.getElementById('direct-debug').innerHTML = debugInfo + '\nResponse:\n' + JSON.stringify(data, null, 2);
                }
            } catch (error) {
                showDirectStatus(`Error: ${error.message}`, 'error');
                document.getElementById('direct-debug').style.display = 'block';
                document.getElementById('direct-debug').innerHTML = `Error details:\n${error.stack || error}`;
            } finally {
                document.getElementById('direct-loading').style.display = 'none';
            }
        }
        
        // Test local API
        async function testLocalApi() {
            const query = document.getElementById('local-query').value.trim();
            
            if (!query) {
                showLocalStatus('Please enter a search query', 'error');
                return;
            }
            
            // Show loading indicator
            document.getElementById('local-loading').style.display = 'inline-block';
            document.getElementById('local-status').style.display = 'none';
            document.getElementById('local-results').style.display = 'none';
            document.getElementById('local-debug').style.display = 'none';
            
            try {
                const startTime = performance.now();
                const url = '/api/marketplace/food-search';
                
                const params = new URLSearchParams({
                    query: query
                });
                
                const debugInfo = `Request URL: ${url}\nParameters: ${params.toString()}\n`;
                
                const response = await fetch(`${url}?${params.toString()}`);
                const data = await response.json();
                const endTime = performance.now();
                
                // Show results
                document.getElementById('local-results').style.display = 'block';
                document.getElementById('local-debug').style.display = 'block';
                
                if (response.ok) {
                    // Success
                    const isMockData = data.isMockData ? 'YES (Using fallback data)' : 'NO (Using real API data)';
                    showLocalStatus(`API request successful (${Math.round(endTime - startTime)}ms) - Using Mock Data: ${isMockData}`, data.isMockData ? 'error' : 'success');
                    
                    let resultsHtml = `
                        <h3>Results</h3>
                        <p>Success: ${data.success ? 'Yes' : 'No'}</p>
                        <p>Using Mock Data: ${isMockData}</p>
                    `;
                    
                    if (data.data && data.data.length > 0) {
                        resultsHtml += `
                            <table>
                                <tr>
                                    <th>#</th>
                                    <th>Description</th>
                                    <th>Category</th>
                                </tr>
                        `;
                        
                        data.data.forEach((item, index) => {
                            resultsHtml += `
                                <tr>
                                    <td>${index + 1}</td>
                                    <td>${item.description || 'N/A'}</td>
                                    <td>${item.category || 'N/A'}</td>
                                </tr>
                            `;
                        });
                        
                        resultsHtml += '</table>';
                    } else {
                        resultsHtml += '<p>No results found</p>';
                    }
                    
                    document.getElementById('local-results').innerHTML = resultsHtml;
                    document.getElementById('local-debug').innerHTML = debugInfo + '\nResponse:\n' + JSON.stringify(data, null, 2);
                } else {
                    // Error
                    showLocalStatus(`API request failed: ${response.status} ${response.statusText}`, 'error');
                    document.getElementById('local-results').innerHTML = '<p>Request failed</p>';
                    document.getElementById('local-debug').innerHTML = debugInfo + '\nResponse:\n' + JSON.stringify(data, null, 2);
                }
            } catch (error) {
                showLocalStatus(`Error: ${error.message}`, 'error');
                document.getElementById('local-debug').style.display = 'block';
                document.getElementById('local-debug').innerHTML = `Error details:\n${error.stack || error}`;
            } finally {
                document.getElementById('local-loading').style.display = 'none';
            }
        }
        
        // Helper functions
        function showDirectStatus(message, type) {
            const statusElement = document.getElementById('direct-status');
            statusElement.textContent = message;
            statusElement.className = 'status ' + type;
            statusElement.style.display = 'block';
        }
        
        function showLocalStatus(message, type) {
            const statusElement = document.getElementById('local-status');
            statusElement.textContent = message;
            statusElement.className = 'status ' + type;
            statusElement.style.display = 'block';
        }
    </script>
</body>
</html>
